# -*- coding: utf-8 -*-
"""streamlit_app

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1w3q9UPu9r3_qLorkOoS7zMFEMv5DMxJu
"""

import streamlit as st
import tensorflow as tf
from PIL import Image, ImageOps
import numpy as np

@st.cache_resource
def load_model():
    model = tf.keras.models.load_model('final3.h5')
    return model

model = load_model()
st.write("# Cifar10 prediction")

file = st.file_uploader("Choose an image file", type=["jpg", "png"])

def import_and_predict(image_data, model):
    size = (32, 32)
    image = ImageOps.fit(image_data, size, Image.ANTIALIAS).convert("RGB")
    img = np.asarray(image)
    img_reshape = img[np.newaxis, ...]
    prediction = model.predict(img_reshape)
    return prediction

if file is None:
    st.text("Please upload an image file")
else:
    image = Image.open(file)
    st.image(image, use_column_width=True)
    prediction = import_and_predict(image, model)
    class_names = ['airplane', 'automobile', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck']
    string = "OUTPUT: " + class_names[np.argmax(prediction)]
    st.success(string)